include ../../Makefile.user

#######################  Lapack Flags ###########################

# Linker flags 
ifdef lapack_lib_dir
ld_pre_flags = -L$(lapack_lib_dir) -llapack -lblas
else
ld_pre_flags =
endif

########################## FFTW Flags ###########################
# Linker flags 
ifdef fftw_lib_dir
ld_sim_flags = -L$(fftw_lib_dir) -lfftw3 -lm
else
ld_sim_flags = 
endif

ifdef lapack_lib_dir
ld_sim_flags += -L$(lapack_lib_dir) -llapack -lblas
endif

# Header flags
ifdef fftw_include_dir
hd_flags = -I$(fftw_include_dir)
else
hd_flags = 
endif

# Compiler flags
f90_flags = $(FFLAGS) $(hd_flags)

#################### Post-process Silo Flags #####################
# Linker flags
ifdef silo_lib_dir
silo_flags = -L$(silo_lib_dir) -lsiloh5 -lm
else
silo_flags =
endif
ld_post_flags = $(ld_sim_flags) $(silo_flags)

# Header flags
ifdef silo_include_dir
hd_post_flags = -I$(silo_include_dir)
else
hd_post_flags =
endif

# Compiler flags
f90_post_flags = $(f90_flags) -O0 $(hd_post_flags)

# The following assumes the use of a gcc-based fortran compiler
# GFortran v10+ require -fallow-argument-mismatch to turn what were previously errors into warnings

ALLOW_ARGUMENT_MISMATCH_TEST := $(shell expr "$$($(FC) -dumpversion | cut -f1 -d.)" ">=" "10")

ifeq "$(ALLOW_ARGUMENT_MISMATCH_TEST)" "1"
    FFLAGS := $(FFLAGS) -fallow-argument-mismatch
endif
